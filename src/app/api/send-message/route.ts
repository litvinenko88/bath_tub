import { NextRequest, NextResponse } from 'next/server'

export async function POST(request: NextRequest) {
  try {
    const { name, phone, source, quizData } = await request.json()

    if (!name || !phone) {
      return NextResponse.json({ error: '–ò–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' }, { status: 400 })
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∫–≤–∏–∑–∞ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    const formatQuizData = () => {
      if (!quizData || Object.keys(quizData).length === 0) return ''
      
      const quizSteps = [
        { id: 1, title: '–†–∞–∑–º–µ—Ä —á–∞–Ω–∞', options: [
          { id: 'size-6', title: '–ë–∞–Ω–Ω—ã–π —á–∞–Ω "–ê–ª—Ç–∞–π"', description: '6 –≥—Ä–∞–Ω–µ–π, –í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å 4 —á–µ–ª, –î–∏–∞–º–µ—Ç—Ä √ò 1700–º–º' },
          { id: 'size-8', title: '–ë–∞–Ω–Ω—ã–π —á–∞–Ω "–°–∏–±–∏—Ä—å"', description: '8 –≥—Ä–∞–Ω–µ–π, –í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å 6 —á–µ–ª, –î–∏–∞–º–µ—Ç—Ä √ò 1900–º–º' },
          { id: 'size-10', title: '–ë–∞–Ω–Ω—ã–π —á–∞–Ω "–¢–∞–π–≥–∞"', description: '10 –≥—Ä–∞–Ω–µ–π, –í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å 10 —á–µ–ª, –î–∏–∞–º–µ—Ç—Ä √ò 2300–º–º' }
        ]},
        { id: 2, title: '–§–æ—Ä–º–∞ —á–∞–Ω–∞', options: [
          { id: 'form-grannaya', title: '–ì—Ä–∞–Ω–µ–Ω–Ω–∞—è' },
          { id: 'form-brilliant', title: '–ë—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤–∞—è' }
        ]},
        { id: 3, title: '–¢–∏–ø –Ω–∞–≥—Ä–µ–≤–∞', options: [
          { id: 'heating-wood', title: '–≠–ª–µ–∫—Ç—Ä–æ–ø–µ—á—å' },
          { id: 'heating-fire', title: '–ü–æ–¥–æ–≥—Ä–µ–≤ –æ—Ç –∫–æ—Å—Ç—Ä–∞' },
          { id: 'heating-gas', title: '–ì–∞–∑–æ–≤–∞—è –ø–µ—á—å' }
        ]},
        { id: 4, title: '–¢–∏–ø —É—Å—Ç–∞–Ω–æ–≤–∫–∏', options: [
          { id: 'install-wood', title: '–ú–æ–Ω—Ç–∞–∂ —á–∞–Ω–∞ –Ω–∞ –¥–µ—Ä–µ–≤—è–Ω–Ω—ã–µ —Å—Ä—É–±—ã' },
          { id: 'install-metal', title: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫—É—é –ø–æ–¥—Å—Ç–∞–≤–∫—É' }
        ]},
        { id: 5, title: '–î–æ–ø–æ–ª–Ω–µ–Ω–∏—è', options: [
          { id: 'addon-hydro', title: '–ì–∏–¥—Ä–æ–º–∞—Å—Å–∞–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞' },
          { id: 'addon-led', title: '–ú–Ω–æ–≥–æ—Ü–≤–µ—Ç–Ω–∞—è LED-–ø–æ–¥—Å–≤–µ—Ç–∫–∞' },
          { id: 'addon-audio', title: '–í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∞—É–¥–∏–æ—Å–∏—Å—Ç–µ–º–∞' },
          { id: 'addon-table', title: '–°–∫–ª–∞–¥–Ω–æ–π —Å–µ—Ä–≤–∏—Ä–æ–≤–æ—á–Ω—ã–π —Å—Ç–æ–ª–∏–∫' }
        ]}
      ]

      let quizText = '\n\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ö–í–ò–ó–ê:\n'
      Object.entries(quizData).forEach(([stepId, answerIds]) => {
        const step = quizSteps.find(s => s.id === parseInt(stepId))
        if (step && Array.isArray(answerIds)) {
          quizText += `\n‚ùì ${step.title}:\n`
          answerIds.forEach(answerId => {
            const option = step.options.find(opt => opt.id === answerId)
            if (option) {
              quizText += `‚úÖ ${option.title}\n`
              if (option.description) {
                quizText += `   ${option.description}\n`
              }
            }
          })
        }
      })
      return quizText
    }

    const message = `üî• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ "–ë–∞–Ω–Ω—ã–µ —á–∞–Ω—ã"

üë§ –ò–º—è: ${name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
üìç –ò—Å—Ç–æ—á–Ω–∏–∫: ${source}${formatQuizData()}

‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`

    const response = await fetch(`https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: process.env.TELEGRAM_CHAT_ID,
        text: message
      })
    })

    if (!response.ok) {
      throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram')
    }

    return NextResponse.json({ success: true })
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ API:', error)
    return NextResponse.json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' }, { status: 500 })
  }
}